// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @db.VarChar @default(cuid())
  email       String    @db.VarChar @unique
  password    String    @db.VarChar
  name        String?   @db.VarChar
  avatar      String?   @db.VarChar
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  chats       ChatRecipient[]
  messages    Message[]

  @@map("users")
}

model Chat {
  id          String    @id @db.VarChar @default(cuid())
  title       String    @db.VarChar
  avatar      String?   @db.VarChar
  description String?   @db.VarChar

  recipients  ChatRecipient[]
  messages    Message[]

  @@map("chats")
}

model ChatRecipient {
  chatId      String    @db.VarChar
  chat        Chat      @relation(fields: [chatId], references: [id])
  @@index([chatId], type: Hash)

  userId      String    @db.VarChar
  user        User      @relation(fields: [userId], references: [id])
  @@index([userId], type: Hash)

  @@id([chatId, userId])
  @@map("chat_recipients")
}

model Message {
  id          String    @id @db.VarChar @default(cuid())
  
  chatId      String    @db.VarChar
  chat        Chat      @relation(fields: [chatId], references: [id])
  @@index([chatId], type: Hash)

  userId      String    @db.VarChar
  user        User      @relation(fields: [userId], references: [id])
  @@index([userId], type: Hash)

  message     String

  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  @@map("messages")
}